import pandas as pd

import numpy as np

df = pd.read_csv("evalcsv.csv",  sep='\s*,\s*', header=0, encoding='ascii', engine='python')

arr = ['CASEID',
 'V001',
 'SDISTRI',
 'V002',
 'V010',
 'V004',
 'V025',
 'V040',
 'V044',
 'V104',
 'V106',
 'V113',
 'V116',
 'V130',
 'V136',
 'V137',
 'V160',
 'V161',
 'V190',
 'ML101',
 'V201',
 'V364',
 'V445',
 'V456',
 'V457',
 'V459',
 'V463A',
 'V463B',
 'V463C',
 'V463D',
 'V463E',
 'V463F',
 'V463G',
 'V463X',
 'V463Z',
 'V473B',
 'V480',
 'V481',
 'V525',
 'V705',
 'V763A',
 'V763B',
 'V763C',
 'V774A',
 'V774B',
 'V774C',
 'V824',
 'S250',
 'S251',
 'S315',
 'S321A',
 'S321B',
 'S321C',
 'S321D',
 'S321E',
 'S321F',
 'S321G',
 'S321H',
 'S321I',
 'S321J',
 'S321K',
 'S321L',
 'S321M',
 'S321N',
 'S321X',
 'S321Y',
 'S323',
 'S704',
 'S707',
 'S708',
 'S710C',
 'S710E',
 'S716',
 'S717',
 'S718A',
 'S718B',
 'S718C',
 'S718D',
 'S718E',
 'S718X',
 'S723A',
 'S723AB',
 'S723B',
 'S723BB',
 'S723C',
 'S723CB',
 'S723D',
 'S723DB',
 'S723E',
 'S723EB',
 'S727A',
 'S727B',
 'S727C',
 'SB18',
 'SB19',
 'B4',
 'B5',
 'B6',
 'M4',
 'M6',
 'M15',
 'M17',
 'M18',
 'M46',
 'H2',
 'H3',
 'H4',
 'H5',
 'H6',
 'H7',
 'H8',
 'H9',
 'H0',
 'H10',
 'H11',
 'H11B',
 'H15',
 'H15A',
 'H15B',
 'H15C',
 'H15D',
 'H15E',
 'H15F',
 'H15G',
 'H15H',
 'H15I',
 'H22',
 'H31',
 'H31B',
 'H31C',
 'H33',
 'H40',
 'H42',
 'H43',
 'HW2',
 'HW53',
 'HW57',
 'ML13A',
 'ML13B',
 'ML13D',
 'ML13E',
 'ML13F',
 'ML13G',
 'ML13H',
 'ML13K',
 'ML13L',
 'ML13M',
 'ML13N',
 'HEP0',
 'HEP1',
 'HEP2',
 'HEP3',
 'B2']

"""
formu = ["VAL","VAL","VAL","VAL","1 - ((2015-VAL)*0.01)","VAL*0.001","1/VAL+1","VAL","3-VAL","(VAL+4)%100","VAL*0.1","VAL*0.01","1-VAL*0.01","VAL","1/(VAL+1)","1/(VAL+1)","VAL%7","100/VAL+1","VAL*0.2","VAL%3","VAL*0.3","5-(VAL%5)","abs(28000-VAL) *0.001","VAL*0.1","VAL","VAL","1-VAL","1-VAL","1-VAL","1-VAL","1-VAL","1-VAL","1-VAL","1-VAL","VAL","6-VAL","VAL%8","VAL","1/(abs(18-VAL)+1)","7- (abs(VAL-1)%7)","1-(VAL%8)","1-(VAL%8)","1-(VAL%8)","1-(VAL%8)","1-(VAL%8)","1-(VAL%8)","1-(VAL%8)","1-(VAL%8)","1-(VAL%8)","VAL*0.05","VAL*0.01","VAL*0.01","VAL*0.01","VAL*0.01","VAL*0.01","VAL*0.05","VAL*0.05","VAL*0.01","VAL*0.01","VAL*0.01","VAL*0.01","VAL*0.01","VAL*0.01","VAL*0.01","VAL*0.05","1-VAL*0.05","VAL*0.01","1-VAL","1-VAL","1-VAL","1-VAL","1-VAL","1-VAL","VAL*0.3","(1-VAL)*0.03","(1-VAL)*0.03","(1-VAL)*0.01","(1-VAL)*0.01","(1-VAL)*0.03","(1-VAL)*0.01","1-(VAL%8)","1-VAL","1-(VAL%8)","1-VAL","1-(VAL%8)","1-VAL","1-(VAL%8)*0.5","1-VAL","1-(VAL%8)*0.5","1-VAL","1-VAL","1-VAL","1-VAL","1-VAL","VAL","VAL","VAL","(VAL%100)*0.01","VAL*0.01","(100-VAL)*0.01","VAL*0.03","1-VAL","1/(abs(VAL-3)+1)","(998-VAL)*0.001","(VAL%8)*0.3","(VAL%8)*0.3","(VAL%8)*0.3","(VAL%8)*0.3","(VAL%8)*0.3","(VAL%8)*0.3","(VAL%8)*0.3","(VAL%8)*0.3","(VAL%8)*0.3","(VAL%8)","1-(VAL%8)","(VAL%8)","(VAL%8)","(VAL%8)","(VAL%8)","(VAL%8)","(VAL%8)","(VAL%8)","(VAL%8)","(VAL%8)","(VAL%8)","(VAL%8)","(VAL%8)","(VAL%8)","(VAL%8)","(VAL%8)","(VAL%8)","(VAL%8)","(VAL%8)","(VAL%8)","VAL*0.01","VAL*0.1","VAL","1-VAL","1-VAL","1-VAL","1-VAL","1-VAL","1-VAL","1-VAL","1-VAL","1-VAL","1-VAL","1-VAL","(VAL%8)*0.3","(VAL%8)*0.3","(VAL%8)*0.3","(VAL%8)*0.3","1 - ((2015-VAL)*0.01)"]
"""

weigharr= [1,1,1,1,1,1,0.1,1,0.3,0.01,1,1,1,1,1,1,1,0.01,1,1,1,0.1,0.02,0.02,0.1,0.01,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0.4,0.4,1,1,0.3,0.02,0.3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]

count = 0
for i in arr:

    try:
        #df[i] = df[i].apply(lambda VAL: eval(formu[count]))
        df[i] = df[i].apply(lambda VAL: VAL*(weigharr[count]))
    except ZeroDivisionError:
        print(count)

    count = count + 1



print(df['V010'])


df.to_csv("evalcsv2.csv")
